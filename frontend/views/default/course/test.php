<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>JS Bin</title>
    <script src="https://static.opentok.com/v2/js/opentok.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
</head>
<body>

<!-- Publisher placeholder -->
<div id="publisher"></div>

<!-- Stream selector interface -->
<div id="streams"></div>

<!-- Subscriber (only one) -->
<div id="subscriber"></div>

<script>
    // This data is generated by the server
    var sessionId = '2_MX44NTQ1MTF-fjE0MTU4ODc5NTE4ODV-SEN3dXBPYkFTbkFkZ3cwN3BDckJ1VDJNfn4',
        apiKey = '854511',
        token = 'T1==cGFydG5lcl9pZD04NTQ1MTEmc2lnPWE1YzBiOTA0ODcyZDQxNjRjNTc4YTI4MGUwZjI4ODNiYjU4N2Q3YmM6cm9sZT1wdWJsaXNoZXImc2Vzc2lvbl9pZD0yX01YNDROVFExTVRGLWZqRTBNVFU0T0RjNU5URTRPRFYtU0VOM2RYQlBZa0ZUYmtGa1ozY3dOM0JEY2tKMVZESk5mbjQmY3JlYXRlX3RpbWU9MTQxNTg4ODY4MSZub25jZT0wLjMwMTMwMjMxMzY2ODA4NzkmZXhwaXJlX3RpbWU9MTQxODQ3OTk0MA==';
</script>
<script>
    var session = OT.initSession(apiKey, sessionId),
        puslisher = OT.initPublisher('publisher'),
        streams = {},
        subscriber;

    session.on({
        'sessionConnected': function(event) {
            // each client publishes
            session.publish(publisher);
        },
        'streamCreated': function(event) {
            // create a button to select the stream
            // TODO: use connection data from token for a friendlier description of the stream
            $('<button class="stream stream-'+event.stream.streamId+'">Stream'+event.stream.streamId+'</button>').appendTo('#streams');

            // store the stream object for later use
            streams[event.stream.streamId] = event.stream;
        },
        'streamDestroyed': function(event) {
            // remove the button for the stream that was destroyed
            $('#streams .stream-'+event.stream.streamId).remove();

            // remove the stream object from the storage
            delete streams[event.stream.streamId];
        }
    });

    var streamSelected = function(event) {
        // subscribe to the selected stream
        var streamId = extractStreamId(event.target);
        if (subscriber) {
            session.unsubscribe(subscriber);
        }
        subscriber = session.subscribe(streams[streamId], 'subscriber');
        subscriber.on('destroyed', function() { subscriber = false; });

        // disable the button and enable all others
        $('#streams button').prop('disabled', false);
        $(event.target).prop('disabled', true);
    };

    var extractStreamId = function (element) {
        var classes = element.className.split(' '),
            streamId;
        classes.forEach(function(classStr) {
            if (classStr.indexOf('stream-') === 0) {
                streamId = classStr.slice(7);
            }
        });
        return streamId;
    };

    $(document).ready(function() {
        $('#streams').on('click', '.stream', streamSelected);
        session.connect(token);
    });

</script>
</body>
</html>